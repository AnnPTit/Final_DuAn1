package view;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import java.io.File;
import model.ChatLieu;
import model.ChiTietSanPham;
import model.DanhMuc;
import model.Mau;
import model.NSX;
import model.SanPham;
import service.CTSPService;
import service.impl.CTSPImpl;
import service.impl.ChatLieuImpl;
import service.impl.DanhMucImpl;
import service.impl.MauSacImpl;
import service.impl.NSXImpl;
import service.impl.SanPhamImp;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class QuanLySanPham extends javax.swing.JFrame {

    private List<ChatLieu> cl = new ArrayList<>();
    private List<Mau> mau = new ArrayList<>();
    private List<NSX> nsx = new ArrayList<>();
    private List<DanhMuc> dm = new ArrayList<>();
    private List<SanPham> sp = new ArrayList<>();
    private List<ChiTietSanPham> ctsp = new ArrayList<>();
    private CTSPService ctspSer = new CTSPImpl();
    DefaultComboBoxModel<SanPham> cbSP = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<DanhMuc> cbDM = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<ChatLieu> cbCL = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Mau> cbMau = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<NSX> cbNSX = new DefaultComboBoxModel<>();
    private List<ChiTietSanPham> listCTSP;

    int index = 0;

    public QuanLySanPham() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        loadChiTietSanPham(ctsp);
        loadSanPham(sp);
        listCTSP = ctspSer.getAll();
        loadCbSanPham();
        loadCbDanhMuc();
        loadCbChatLieu();
        loadCbMauSac();
        loadCbNSX();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbbSanPham = new javax.swing.JComboBox<>();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGiaNhap = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGiaBan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rdoDKD = new javax.swing.JRadioButton();
        rdoNKD = new javax.swing.JRadioButton();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbbChatLieu = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cbbMauSac = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbbNSX = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbSanPham = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        cbbAll = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        rdoDangBan = new javax.swing.JRadioButton();
        rdoNghiBan = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbThuocTinh = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Sản phẩm"));

        jLabel1.setText("Mã");

        jLabel2.setText("Sản phẩm");

        jLabel3.setText("Số lượng");

        jLabel4.setText("Giá nhập");

        jLabel5.setText("Giá bán");

        jLabel6.setText("Trạng thái");

        buttonGroup2.add(rdoDKD);
        rdoDKD.setSelected(true);
        rdoDKD.setText("Đang kinh doanh");

        buttonGroup2.add(rdoNKD);
        rdoNKD.setText("Nghỉ kinh doanh");

        jLabel7.setText("Danh mục");

        jLabel8.setText("Chất liệu");

        jLabel9.setText("Màu sắc");

        jLabel10.setText("Nhà sản xuất");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane2.setViewportView(txtMoTa);

        btnAdd.setBackground(new java.awt.Color(0, 153, 204));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 153, 204));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 153, 204));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel11.setText("Mô tả");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28)
                                .addComponent(cbbSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaSP)
                                    .addComponent(txtSoLuong)
                                    .addComponent(txtGiaNhap)
                                    .addComponent(txtGiaBan))))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbbDanhMuc, 0, 120, Short.MAX_VALUE)
                                    .addComponent(cbbChatLieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbbMauSac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(cbbNSX, 0, 119, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdoDKD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoNKD)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbbSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(cbbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(cbbMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(cbbNSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rdoDKD)
                            .addComponent(rdoNKD))))
                .addGap(20, 20, 20))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Lọc sản phẩm"));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Tìm kiếm theo tên");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(60, 60, 60))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));

        tbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Mã", "Tên sản phẩm", "Danh mục", "Chất liệu", "Màu sắc", "Nhà sản xuất", "Số lượng", "Giá nhập", "Giá bán", "Mô tả", "Ngày tạo", "Ngày sửa", "Trạng thái"
            }
        ));
        tbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbSanPham);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1087, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(655, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thông tin sản phẩm", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Thuộc tính"));

        jLabel12.setText("Mã");

        jLabel13.setText("Tên");

        cbbAll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sản phẩm", "Danh mục", "Nhà sản xuất", "Chất liệu", "Màu sắc" }));
        cbbAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbAllActionPerformed(evt);
            }
        });

        jLabel14.setText("Trạng thái");

        buttonGroup1.add(rdoDangBan);
        rdoDangBan.setSelected(true);
        rdoDangBan.setText("Đang kinh doanh");

        buttonGroup1.add(rdoNghiBan);
        rdoNghiBan.setText("Nghỉ kinh doanh");

        btnThem.setBackground(new java.awt.Color(0, 153, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(0, 153, 204));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(0, 153, 204));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbbAll, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMa)
                                    .addComponent(txtTen, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdoDangBan)
                                    .addComponent(rdoNghiBan))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(81, 81, 81))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)))
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(rdoDangBan)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNghiBan))))
                .addGap(13, 13, 13)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(cbbAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 153)));

        tbThuocTinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Mã", "Tên", "Ngày tạo", "Ngày sửa", "Trạng thái"
            }
        ));
        tbThuocTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbThuocTinhMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbThuocTinh);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1206, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Thuộc tính sản phẩm", jPanel3);

        jScrollPane1.setViewportView(jTabbedPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbThuocTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbThuocTinhMouseClicked
        int row = tbThuocTinh.getSelectedRow();
        txtMa.setText(tbThuocTinh.getValueAt(row, 1).toString());
        txtTen.setText(tbThuocTinh.getValueAt(row, 2).toString());
        String radio = tbThuocTinh.getValueAt(row, 5).toString();

        if (radio.equals("Đang kinh doanh")) {
            rdoDangBan.setSelected(true);
        } else {
            rdoNghiBan.setSelected(true);
        }
    }//GEN-LAST:event_tbThuocTinhMouseClicked

    private void cbbAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbAllActionPerformed
        String text = cbbAll.getSelectedItem().toString();
        if (text.equals("Sản phẩm")) {
            index = 0;
        } else if (text.equals("Danh mục")) {
            index = 1;
        } else if (text.equals("Nhà sản xuất")) {
            index = 2;
        } else if (text.equals("Chất liệu")) {
            index = 3;
        } else if (text.equals("Màu sắc")) {
            index = 4;
        }
        loadCBB();
    }//GEN-LAST:event_cbbAllActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (index == 0) {
            if (validateThuocTinh()) {
                String result = new SanPhamImp().add(getSanPham());
                JOptionPane.showMessageDialog(this, result);
                loadSanPham(sp);
                loadAllCB();
            }
        } else if (index == 1) {
            if (validateThuocTinh()) {
                String result = new DanhMucImpl().add(getDanhMuc());
                JOptionPane.showMessageDialog(this, result);
                loadDanhMuc(dm);
                loadAllCB();
            }
        } else if (index == 2) {
            if (validateThuocTinh()) {
                String result = new NSXImpl().add(getNSX());
                JOptionPane.showMessageDialog(this, result);
                loadNSX(nsx);
                loadAllCB();
            }
        } else if (index == 3) {
            if (validateThuocTinh()) {
                String result = new ChatLieuImpl().add(getChatLieu());
                JOptionPane.showMessageDialog(this, result);
                loadChatLieu(cl);
                loadAllCB();
            }
        } else if (index == 4) {
            if (validateThuocTinh()) {
                String result = new MauSacImpl().add(getMauSac());
                JOptionPane.showMessageDialog(this, result);
                loadMauSac(mau);
                loadAllCB();
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tbThuocTinh.getSelectedRow();
        Integer id = (Integer) tbThuocTinh.getValueAt(row, 0);
        if (index == 0) {
            if (validateThuocTinh()) {
                String result = new SanPhamImp().update(getSP(), id);
                JOptionPane.showMessageDialog(this, result);
                loadSanPham(sp);
                loadAllCB();
            }
        } else if (index == 1) {
            if (validateThuocTinh()) {
                String result = new DanhMucImpl().update(getDM(), id);
                JOptionPane.showMessageDialog(this, result);
                loadDanhMuc(dm);
                loadAllCB();
            }
        } else if (index == 2) {
            if (validateThuocTinh()) {
                String result = new NSXImpl().update(getNhaSanXuat(), id);
                JOptionPane.showMessageDialog(this, result);
                loadNSX(nsx);
                loadAllCB();
            }
        } else if (index == 3) {
            if (validateThuocTinh()) {
                String result = new ChatLieuImpl().update(getCL(), id);
                JOptionPane.showMessageDialog(this, result);
                loadChatLieu(cl);
                loadAllCB();
            }
        } else if (index == 4) {
            if (validateThuocTinh()) {
                String result = new MauSacImpl().update(getMS(), id);
                JOptionPane.showMessageDialog(this, result);
                loadMauSac(mau);
                loadAllCB();
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tbThuocTinh.getSelectedRow();
        Integer id = (Integer) tbThuocTinh.getValueAt(row, 0);

        if (index == 0) {
            String result = new SanPhamImp().delete(getSanPham(), id);
            JOptionPane.showMessageDialog(this, result);
            loadSanPham(sp);
            loadAllCB();
        } else if (index == 1) {
            String result = new DanhMucImpl().delete(getDanhMuc(), id);
            JOptionPane.showMessageDialog(this, result);
            loadDanhMuc(dm);
            loadAllCB();
        } else if (index == 2) {
            String result = new NSXImpl().delete(getNSX(), id);
            JOptionPane.showMessageDialog(this, result);
            loadNSX(nsx);
            loadAllCB();
        } else if (index == 3) {
            String result = new ChatLieuImpl().delete(getChatLieu(), id);
            JOptionPane.showMessageDialog(this, result);
            loadChatLieu(cl);
            loadAllCB();
        } else if (index == 4) {
            String result = new MauSacImpl().delete(getMauSac(), id);
            JOptionPane.showMessageDialog(this, result);
            loadMauSac(mau);
            loadAllCB();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSanPhamMouseClicked
        int row = tbSanPham.getSelectedRow();
        listCTSP = ctspSer.getAll();
        ChiTietSanPham ct = listCTSP.get(row);
        txtMaSP.setText(ct.getMa());
        cbSP.setSelectedItem(ct.getSanPham());
        cbDM.setSelectedItem(ct.getDanhMuc());
        cbCL.setSelectedItem(ct.getChatLieu());
        cbMau.setSelectedItem(ct.getMauSac());
        cbNSX.setSelectedItem(ct.getNhaSanXuat());
        txtSoLuong.setText(String.valueOf(ct.getSoLuongTon()));
        txtGiaNhap.setText(String.valueOf(ct.getGiaNhap()));
        txtGiaBan.setText(String.valueOf(ct.getGiaBan()));
        txtMoTa.setText(String.valueOf(ct.getMoTa()));
        Integer radio = ct.getTrangThai();
        if (radio == 1) {
            rdoDKD.setSelected(true);
        } else {
            rdoNKD.setSelected(true);
        }
    }//GEN-LAST:event_tbSanPhamMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (validateSanPham()) {
            String result = new CTSPImpl().add(getData());
            JOptionPane.showMessageDialog(this, result);
            loadChiTietSanPham(ctsp);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tbSanPham.getSelectedRow();
        Integer id = (Integer) tbSanPham.getValueAt(row, 0);

        String result = new CTSPImpl().delete(getData(), id);
        JOptionPane.showMessageDialog(this, result);
        loadChiTietSanPham(ctsp);

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = tbSanPham.getSelectedRow();
        Integer id = (Integer) tbSanPham.getValueAt(row, 0);

        if (validateSanPham()) {
            String result = new CTSPImpl().update(getDataCTSP(), id);
            JOptionPane.showMessageDialog(this, result);
            loadChiTietSanPham(ctsp);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        searchByName();
    }//GEN-LAST:event_txtSearchKeyReleased

    void loadCbSanPham() {
        cbbSanPham.setModel((DefaultComboBoxModel) cbSP);
        cbSP.removeAllElements();
        for (SanPham sp : new SanPhamImp().getAll()) {
            cbSP.addElement(sp);
        }
    }

    void loadCbDanhMuc() {
        cbbDanhMuc.setModel((DefaultComboBoxModel) cbDM);
        cbDM.removeAllElements();
        for (DanhMuc dm : new DanhMucImpl().getAll()) {
            cbDM.addElement(dm);
        }
    }

    void loadCbChatLieu() {
        cbbChatLieu.setModel((DefaultComboBoxModel) cbCL);
        cbCL.removeAllElements();
        for (ChatLieu cl : new ChatLieuImpl().getAll()) {
            cbCL.addElement(cl);
        }
    }

    void loadCbMauSac() {
        cbbMauSac.setModel((DefaultComboBoxModel) cbMau);
        cbMau.removeAllElements();
        for (Mau mau : new MauSacImpl().getAll()) {
            cbMau.addElement(mau);
        }
    }

    void loadCbNSX() {
        cbbNSX.setModel((DefaultComboBoxModel) cbNSX);
        cbNSX.removeAllElements();
        for (NSX nsx : new NSXImpl().getAll()) {
            cbNSX.addElement(nsx);
        }
    }

    public void loadAllCB() {
        loadCbChatLieu();
        loadCbDanhMuc();
        loadCbMauSac();
        loadCbNSX();
        loadCbSanPham();
    }

    void loadChiTietSanPham(List<ChiTietSanPham> list) {
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();
        model.setRowCount(0);
        list = new CTSPImpl().getAll();
        for (ChiTietSanPham ctsp : list) {
            model.addRow(ctsp.toDataRow());
        }
    }

    void loadSanPham(List<SanPham> list) {
        DefaultTableModel model = (DefaultTableModel) tbThuocTinh.getModel();
        model.setRowCount(0);
        list = new SanPhamImp().getAll();
        for (SanPham sp : list) {
            model.addRow(sp.toDataRow());
        }
    }

    void loadChatLieu(List<ChatLieu> list) {
        DefaultTableModel model = (DefaultTableModel) tbThuocTinh.getModel();
        model.setRowCount(0);
        list = new ChatLieuImpl().getAll();
        for (ChatLieu x : list) {
            model.addRow(x.toDataRow());
        }
    }

    void loadMauSac(List<Mau> list) {
        DefaultTableModel model = (DefaultTableModel) tbThuocTinh.getModel();
        model.setRowCount(0);
        list = new MauSacImpl().getAll();
        for (Mau x : list) {
            model.addRow(x.toDataRow());
        }
    }

    void loadDanhMuc(List<DanhMuc> list) {
        DefaultTableModel model = (DefaultTableModel) tbThuocTinh.getModel();
        model.setRowCount(0);
        list = new DanhMucImpl().getAll();
        for (DanhMuc x : list) {
            model.addRow(x.toDataRow());
        }
    }

    void loadNSX(List<NSX> list) {
        DefaultTableModel model = (DefaultTableModel) tbThuocTinh.getModel();
        model.setRowCount(0);
        list = new NSXImpl().getAll();
        for (NSX x : list) {
            model.addRow(x.toDataRow());
        }
    }

    ChiTietSanPham getData() {
        ChiTietSanPham ct = new ChiTietSanPham();
        String text = "QRCODE" + txtMaSP.getText().toUpperCase();
        ct.setMa(txtMaSP.getText().toUpperCase());
        ct.setMoTa(txtMoTa.getText());
        ct.setSoLuongTon(Integer.parseInt(txtSoLuong.getText()));
        ct.setGiaNhap(BigDecimal.valueOf(Double.valueOf(txtGiaNhap.getText())));
        ct.setGiaBan(BigDecimal.valueOf(Double.valueOf(txtGiaBan.getText())));
        ct.setNgayTao(new Date());
        ct.setNgaySua(new Date());
        if (rdoDKD.isSelected()) {
            ct.setTrangThai(1);
        } else {
            ct.setTrangThai(0);
        }
        SanPham sp = (SanPham) cbbSanPham.getSelectedItem();
        ct.setSanPham(sp);
        DanhMuc dm = (DanhMuc) cbbDanhMuc.getSelectedItem();
        ct.setDanhMuc(dm);
        ChatLieu cl = (ChatLieu) cbbChatLieu.getSelectedItem();
        ct.setChatLieu(cl);
        Mau mau = (Mau) cbbMauSac.getSelectedItem();
        ct.setMauSac(mau);
        NSX nsx = (NSX) cbbNSX.getSelectedItem();
        ct.setNhaSanXuat(nsx);
        
        ct.setQrCode(txtMaSP.getText().toUpperCase() + ".png");
        try {
            String path = "img/qrcode/" + txtMaSP.getText().toUpperCase() + ".png";
            String charset = "UTF-8";
            Map<EncodeHintType, ErrorCorrectionLevel> map = new HashMap<EncodeHintType, ErrorCorrectionLevel>();
            map.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
            BitMatrix bit = new MultiFormatWriter().encode(new String(text.getBytes(charset), charset),BarcodeFormat.QR_CODE,500,500,map);
            MatrixToImageWriter.writeToFile(bit, path.substring(path.lastIndexOf('.')+1), new File(path));
        } catch (Exception ex) {
            System.out.println(ex);
        }
        return ct;

    }

    ChiTietSanPham getDataCTSP() {
        ChiTietSanPham chiTiet = new ChiTietSanPham();
        chiTiet.setMa(txtMaSP.getText());
        chiTiet.setMoTa(txtMoTa.getText());
        chiTiet.setSoLuongTon(Integer.parseInt(txtSoLuong.getText()));
        chiTiet.setGiaNhap(BigDecimal.valueOf(Double.valueOf(txtGiaNhap.getText())));
        chiTiet.setGiaBan(BigDecimal.valueOf(Double.valueOf(txtGiaBan.getText())));
        chiTiet.setNgaySua(new Date());
        if (rdoDKD.isSelected()) {
            chiTiet.setTrangThai(1);
        } else {
            chiTiet.setTrangThai(0);
        }
        SanPham sp = (SanPham) cbbSanPham.getSelectedItem();
        chiTiet.setSanPham(sp);
        DanhMuc dm = (DanhMuc) cbbDanhMuc.getSelectedItem();
        chiTiet.setDanhMuc(dm);
        ChatLieu cl = (ChatLieu) cbbChatLieu.getSelectedItem();
        chiTiet.setChatLieu(cl);
        Mau mau = (Mau) cbbMauSac.getSelectedItem();
        chiTiet.setMauSac(mau);
        NSX nsx = (NSX) cbbNSX.getSelectedItem();
        chiTiet.setNhaSanXuat(nsx);
        return chiTiet;

    }

    SanPham getSanPham() {
        SanPham sp = new SanPham();
        sp.setMaSP(txtMa.getText());
        sp.setTenSP(txtTen.getText());
        sp.setNgayTao(new Date());
        sp.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            sp.setTrangThai(1);
        } else {
            sp.setTrangThai(0);
        }
        return sp;
    }

    SanPham getSP() {
        SanPham sp = new SanPham();
        sp.setMaSP(txtMa.getText());
        sp.setTenSP(txtTen.getText());
        sp.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            sp.setTrangThai(1);
        } else {
            sp.setTrangThai(0);
        }
        return sp;
    }

    ChatLieu getChatLieu() {
        ChatLieu cl = new ChatLieu();
        cl.setMaCL(txtMa.getText());
        cl.setTenCL(txtTen.getText());
        cl.setNgayTao(new Date());
        cl.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            cl.setTrangThai(1);
        } else {
            cl.setTrangThai(0);
        }
        return cl;
    }

    ChatLieu getCL() {
        ChatLieu cl = new ChatLieu();
        cl.setMaCL(txtMa.getText());
        cl.setTenCL(txtTen.getText());
        cl.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            cl.setTrangThai(1);
        } else {
            cl.setTrangThai(0);
        }
        return cl;
    }

    Mau getMauSac() {
        Mau ms = new Mau();
        ms.setMaMau(txtMa.getText());
        ms.setTenMau(txtTen.getText());
        ms.setNgayTao(new Date());
        ms.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            ms.setTrangThai(1);
        } else {
            ms.setTrangThai(0);
        }
        return ms;
    }

    Mau getMS() {
        Mau ms = new Mau();
        ms.setMaMau(txtMa.getText());
        ms.setTenMau(txtTen.getText());
        ms.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            ms.setTrangThai(1);
        } else {
            ms.setTrangThai(0);
        }
        return ms;
    }

    DanhMuc getDanhMuc() {
        DanhMuc dm = new DanhMuc();
        dm.setMaDM(txtMa.getText());
        dm.setTenDM(txtTen.getText());
        dm.setNgayTao(new Date());
        dm.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            dm.setTrangThai(1);
        } else {
            dm.setTrangThai(0);
        }
        return dm;
    }

    DanhMuc getDM() {
        DanhMuc dm = new DanhMuc();
        dm.setMaDM(txtMa.getText());
        dm.setTenDM(txtTen.getText());
        dm.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            dm.setTrangThai(1);
        } else {
            dm.setTrangThai(0);
        }
        return dm;
    }

    NSX getNSX() {
        NSX nsx = new NSX();
        nsx.setMaNSX(txtMa.getText());
        nsx.setTenNSX(txtTen.getText());
        nsx.setNgayTao(new Date());
        nsx.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            nsx.setTrangThai(1);
        } else {
            nsx.setTrangThai(0);
        }
        return nsx;
    }

    NSX getNhaSanXuat() {
        NSX nsx = new NSX();
        nsx.setMaNSX(txtMa.getText());
        nsx.setTenNSX(txtTen.getText());
        nsx.setNgaySua(new Date());
        if (rdoDangBan.isSelected()) {
            nsx.setTrangThai(1);
        } else {
            nsx.setTrangThai(0);
        }
        return nsx;
    }

    void loadCBB() {
        if (index == 0) {
            loadSanPham(sp);
        } else if (index == 1) {
            loadDanhMuc(dm);
        } else if (index == 2) {
            loadNSX(nsx);
        } else if (index == 3) {
            loadChatLieu(cl);
        } else if (index == 4) {
            loadMauSac(mau);
        }
    }

    void searchByName() {
        DefaultTableModel tb = (DefaultTableModel) tbSanPham.getModel();
        tb.setRowCount(0);

        List<ChiTietSanPham> ct = ctspSer.getAll();
        for (ChiTietSanPham x : ct) {
            if (x.getSanPham().getTenSP().toLowerCase().contains(txtSearch.getText().trim().toLowerCase())) {
                tb.addRow(x.toDataRow());
            }
        }
    }

    public boolean validateSanPham() {
        String soLuong = txtSoLuong.getText();
        String giaNhap = txtGiaNhap.getText();
        String giaBan = txtGiaBan.getText();

        if (soLuong.isBlank() || giaNhap.isBlank() || giaBan.isBlank()) {
            JOptionPane.showMessageDialog(this, "Không được để trống");
            return false;
        }

        try {
            Integer.parseInt(soLuong);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số nguyên");
            return false;
        }

        try {
            if (Integer.parseInt(soLuong) > 99) {
                JOptionPane.showMessageDialog(this, "Số lượng phải dưới 100");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải dưới 100");
            return false;
        }

        if (Integer.valueOf(soLuong) < 1) {
            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0");
            return false;
        }

        Pattern partten = Pattern.compile("^[0-9]+$");
        Matcher matcher1 = partten.matcher(giaBan);
        Matcher matcher2 = partten.matcher(giaNhap);

        if (!matcher1.matches()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            return false;
        }

        if (!matcher2.matches()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            return false;
        }

        if (Double.parseDouble(giaBan) < Double.parseDouble(giaNhap)) {
            JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn giá nhập");
            return false;
        }

        return true;
    }

    public boolean validateThuocTinh() {
        if (txtMa.getText().isBlank() || txtTen.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Không được để trống");
            return false;
        }

        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbbAll;
    private javax.swing.JComboBox<String> cbbChatLieu;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JComboBox<String> cbbMauSac;
    private javax.swing.JComboBox<String> cbbNSX;
    private javax.swing.JComboBox<String> cbbSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdoDKD;
    private javax.swing.JRadioButton rdoDangBan;
    private javax.swing.JRadioButton rdoNKD;
    private javax.swing.JRadioButton rdoNghiBan;
    private javax.swing.JTable tbSanPham;
    private javax.swing.JTable tbThuocTinh;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
